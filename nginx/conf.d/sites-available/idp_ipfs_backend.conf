upstream idp {
    server idp-catena:5000;
}

upstream ipfs {
   server ipfs-api:4000;
}

server {
    listen 80;
    # listen 443 ssl;

    server_name ec2-54-204-24-52.compute-1.amazonaws.com;
    client_max_body_size 100M;

    # Testing endpoint
    location /api/v1/ping {
        proxy_pass http://idp/api/v1/ping;
    }
    location /api/v1/test {
        proxy_pass http://idp/api/v1/test;
    }

    # Auth Endpoint
    location /api/v1/auth/register {
        proxy_pass http://idp/api/v1/auth/register;
    }
    location /api/v1/auth/login {
        proxy_pass http://idp/api/v1/auth/login;
    }
    location /api/v1/auth/logout {
        proxy_pass http://idp/api/v1/auth/logout;
    }
    location /api/v1/auth/validate_token {
        proxy_pass http://idp/api/v1/auth/validate_token;
    }
    location /api/v1/auth/refresh_token {
        proxy_pass http://idp/api/v1/auth/refresh_token;
    }
    location /api/v1/auth/update_password {
        proxy_pass http://idp/api/v1/auth/update_password;
    }
    location /api/v1/auth/request_reset{
        proxy_pass http://idp/api/v1/auth/request_reset;
    }
    location /api/v1/auth/reset_password {
        proxy_pass http://idp/api/v1/auth/reset_password;
    }

    # Oauth2 Endpoint
    location /api/v1/oauth2/login {
        proxy_pass http://idp/api/v1/oauth2/login;
    }
    location /api/v1/oauth2/authorize {
        proxy_pass http://idp/api/v1/oauth2/authorize;
    }
    location /api/v1/oauth2/client/create {
        proxy_pass http://idp/api/v1/oauth2/client/create;
    }

    # Testing endpoints
    location /api/v1/ipfs/ping {
        proxy_pass http://ipfs/api/v1/ipfs/ping;
    }
    location /api/v1/ipfs/secure {
        proxy_pass http://ipfs/api/v1/ipfs/secure;
    }
    location /api/v1/ipfs/secureOauth {
        proxy_pass http://ipfs/api/v1/ipfs/secureOauth;
    }
    # User Endpoints
    location /api/v1/ipfs/user/fetch {
        proxy_pass http://ipfs/api/v1/ipfs/user/fetch;
    }
    location /api/v1/ipfs/user/upload {
        proxy_pass http://ipfs/api/v1/ipfs/user/upload;
    }
    # Bank Endpoint
    location /api/v1/ipfs/bank/fetch {
        proxy_pass http://ipfs/api/v1/ipfs/bank/fetch;
    }
}